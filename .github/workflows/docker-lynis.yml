name: Docker Lynis Security Scan

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: docker-lynis-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lynis_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Debug workspace (optional)
        run: |
          pwd
          echo "=== top level ==="
          ls -la
          echo "=== find Dockerfile (depth 4) ==="
          find . -maxdepth 4 -iname "Dockerfile" -print

      - name: Find Dockerfile path
        id: find
        run: |
          set -e
          DOCKERFILE_PATH="$(find . -maxdepth 4 -type f -iname Dockerfile | head -n 1)"
          if [ -z "$DOCKERFILE_PATH" ]; then
            echo "No Dockerfile found within depth 4" >&2
            exit 1
          fi
          CONTEXT_DIR="$(dirname "$DOCKERFILE_PATH")"
          echo "Dockerfile: $DOCKERFILE_PATH"
          echo "Context:    $CONTEXT_DIR"
          echo "dockerfile=$DOCKERFILE_PATH" >> "$GITHUB_OUTPUT"
          echo "context=$CONTEXT_DIR" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Lynis image
        run: docker build -t lynis-sec -f "${{ steps.find.outputs.dockerfile }}" "${{ steps.find.outputs.context }}"

      - name: Prepare log directory
        run: mkdir -p logs

      - name: Run Lynis container (writes log to mounted folder)
        run: docker run --rm -v "${{ github.workspace }}/logs:/var/log/lynis-scan" lynis-sec

      - name: Verify log created and non-empty
        run: |
          if [ ! -s logs/scan.log ]; then
            echo "scan.log missing or empty"
            exit 1
          fi

      - name: Show last lines in summary
        run: |
          echo "### Lynis scan tail" >> $GITHUB_STEP_SUMMARY
          tail -n 50 logs/scan.log >> $GITHUB_STEP_SUMMARY

      - name: Upload scan log artifact
        uses: actions/upload-artifact@v4
        with:
          name: lynis-scan-log
          path: logs/scan.log
          if-no-files-found: error
# error




